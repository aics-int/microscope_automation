# Describes parameters for pipeline experiment to measure hIPS cells
# Used by Python script MicroscopeAutomation.py to control different types of microscopes
#
# based on yaml specification Version 1.2
# http://www.yaml.org/spec/1.2/spec.html
#
#

# Author and version of this file
Info:
 Author: Winfried (based on Calysta)
 Date: 01/06/2021
 Version: 010621_1
 System: ZSD2
 Type: Pipeline 4.8
 Note: Get overview images of wells and use automated position selection

# Workflow
# Dictionary with experiments.
# The experiments are defined below and can have free defined names. They will call a function that is defined in the software.
# Repetitions defines how often this experiment will be repeated. That allow e.g. a time lapse experiment that images 10 cells and than returns to the first one.
# Input is the name of the dictionary with objects that will be imaged (typically created in an earlier experiment)
# Output defines the new dictionary created in this experiment.
# Output is a dictionary with a name (key) and the type of the detected object (Colony, Cell)
Workflow: [
           #{'Experiment': 'InitializeMicroscope', 'Repetitions': 1, 'Input': None, 'Output': {}},
           {'Experiment': 'UpdatePlateWellZero_10x', 'Repetitions': 1, 'Input': None, 'Output': {}},
           {'Experiment': 'Koehler', 'Repetitions': 1, 'Input': None, 'Output': {}},
           {'Experiment': 'ScanPlate', 'Repetitions': 1, 'Input': Wells, 'Output': {Wells_Selected: Well}},
           {'Experiment': 'RunMacro', 'Repetitions': 1, 'Input': None, 'Output': {}},
           {'Experiment': 'SegmentWells', 'Repetitions': 1, 'Input': Wells_Selected, 'Output': {ScanCells: Cell}}
           ]

RecoverySettingsFilePath: 'D:\Automation\GeneralSettings\RecoverySettings'
LogFilePath: 'D:\Automation\GeneralSettings\LogFiles'


PathExperiments: ['D:\Users\SVC_aicspipeline\Documents\Carl Zeiss\ZEN\Documents\Experiment Setups']

# Path to specifications for microscope hardware and software
PathMicroscopeSpecs: ['D:\Users\SVC_aicspipeline\Documents\Git\microscope_automation\data\microscopeSpecifications_ZSD2.yml']

# Path to daily folder
PathDailyFolder: ['D:\Users\SVC_aicspipeline\Desktop\PRODUCTION']

# Path to calibration information
PathCalibration: ['D:\Automation\GeneralSettings\', 'D:\Automation\GeneralSettings\Calibration\']

# Path to Empty positions.czsh file- save_position_list uses this to write a filled positions.czsh file with coordinates from the Automation software.
PathDummy: 'D:\Users\SVC_aicspipeline\Documents\Git\microscope_automation\data\dummy_tile_positions_zsd2.czsh'

# Sample Information in daily folder. Do not use '/' at end of directory.
# All paths are relative to daily folder
ColonyDirPath: &ColonyDirPathRef CeligoColonyData
ReferenceDirPath: References

# Information about meta data file and content
MetaDataPath: Metadata.csv
MetaDataFormat: csv

# Whether to show all dialog boxes or less depending on the user's skill level
LessDialog: True                                 # Set "False": All diag boxes (default)   |   Set "True": Minimal diag boxes

# Settings to initialize microscope
InitializeMicroscope:
 FunctionName: initialize_microscope              # Name of function in Python code in module microscopeAutomation that will process this experiment
 Verbose: False                                   # print debug messages?
 NumberTrials: 3                                  # How often a user is given the chance to set up the system in a correct way
 SetupFolders: True                               # Setup image folder
 CopyColonyFile: False                            # Copy colony file
 ColonyFileFolder: ['\\allen\aics\microscopy\PRODUCTION\Summary\CeligoDailyScans', '../PlateSpecifications']   # Network folder with colony file
 ColonyDirPath: *ColonyDirPathRef
 AddColonies: False                               # add colony information from Hamilton to plate
 Hardware: True                                   # Initialize hardware
 Experiment: Setup_10x.czexp                      # Experiment setting in ZEN blue used for microscope initialization
 Camera: Camera 1 (Back)
 UseAutoFocus: False                              # use autofocus instead of values based on calibration
 FindLoad: True                                   # Ask user to move objective in load position and save
 MaxLoadPosition: 50                              # Maximum focus position that will be accepted as load
 LaserSafety: True                                # Enable laser safety
 Koehler: False                                   # Set Koehler illumination
 StageID: Marzhauser                              # Name of stage used to set up Koehler illumination
 FocusID: MotorizedFocus                          # Name of focus drive used to set up Koehler illumination
 SaveAreaID: ZSD_02_plate                         # Name of save area used to avoid hardware collisions
 Well: E7                                         # Well used to set Koehler
 Load: True                                       # Go to load position when moving objective to Koehler well
 Wait:                                            # Wait for user input after imaging and before removing image from display (has no effect in this experiment module)
  Image: False                                      # Wait after each image
  Plate: False                                      # Reset wait status after each plate
  Repetition: False                                 # Reset wait status after each repetition
 Blocking: False                                  # open modal dialog in case of error (has no effect in this experiment module)


# Set z-zero positions for plate and wells
UpdatePlateWellZero_10x:
 FunctionName: update_plate_z_zero                # Name of function in Python code in module microscopeAutomation that will process this experiment
 Verbose: False                                   # print debug messages?
 NumberTrials: 3                                  # How often a user is given the chance to set up the system in a correct way
 Wait:                                            # Wait for user input after imaging and before removing image from display (has no effect in this experiment module)
  Image: True                                       # Wait after each image
  Plate: False                                      # Reset wait status after each plate
  Repetition: False                                 # Reset wait status after each repetition
 Load: False                                    # Load between objects
 UseReference: False                            # Should reference postition been used?
 Blocking: False                                # open modal dialog in case of error (has no effect in this experiment module)
 Well: E6                                       # Well used to set well zero
 UseAutoFocus: False                            # use autofocus instead of values based on calibration
 Experiment: Setup_10x.czexp
 Camera: Camera 1 (Back)
 AddImmersionWater: False                       # Add immersion water to objective after a predefined number of images
 NameImmersionSystem: BraintreeScientific       # Name for immersion delivery system
 UsePump: False                                 # Use pump to add immersion water
 WellsBeforeAddImmersionWater: 0                # Number of wells to be imaged before water is added to objective. Water will be added before first well.

Koehler:
 FunctionName: initialize_microscope              # Name of function in Python code in module microscopeAutomation that will process this experiment
 Verbose: False                                   # print debug messages?
 NumberTrials: 3                                  # How often a user is given the chance to set up the system in a correct way
 SetupFolders: False                              # Setup image folder
 CopyColonyFile: False                            # Copy colony file
 ColonyFileFolder: ['\\allen\aics\microscopy\PRODUCTION\Summary\CeligoDailyScans', '../PlateSpecifications']   # Network folder with colony file
 ColonyDirPath: *ColonyDirPathRef
 AddColonies: False                               # add colony information from Hamilton to plate
 Hardware: False                                  # Initialize hardware
 Experiment: Setup_10x.czexp                      # Experiment setting in ZEN blue used for microscope initialization
 Camera: Camera 1 (Back)
 UseAutoFocus: False                              # use autofocus instead of values based on calibration
 UseReference: False                            # Should reference postition been used?
 FindLoad: False                                  # Ask user to move objective in load position and save
 MaxLoadPosition: 50                              # Maximum focus position that will be accepted as load
 LaserSafety: False                               # Enable laser safety
 Koehler: True                                    # Set Koehler illumination
 StageID: Marzhauser                              # Name of stage used to set up Koehler illumination
 FocusID: MotorizedFocus                          # Name of focus drive used to set up Koehler illumination
 SaveAreaID: ZSD_02_plate                         # Name of save area used to avoid hardware collisions
 Well: E7                                         # Well used to set Koehler
 Load: False                                      # Go to load position when moving objective to Koehler well
 Wait:                                            # Wait for user input after imaging and before removing image from display (has no effect in this experiment module)
  Image: False                                      # Wait after each image
  Plate: False                                      # Reset wait status after each plate
  Repetition: False                                 # Reset wait status after each repetition
 Blocking: False                                  # open modal dialog in case of error (has no effect in this experiment module)

# Take overview images of selected wells
ScanPlate:
 FunctionName: scan_plate                       # Name of function in Python code in module microscopeAutomation that will process this experiment
 Name: ScanPlate                                # name of experiment
 Verbose: False                                 # print debug messages?
 NumberTrials: 3                                  # How often a user is given the chance to set up the system in a correct way
 Blocking: False                                # open modal dialog in case of error
  # Wells:[C4, C5, C6, C7, C8,
  # D4, D5, D6, D7, D8,
  # E4, E5, E6, E7, E8,
  # F4, F5, F6, F7, F8]
 Wells: &Wells [F4, F5]
 Experiment: ScanWell_10x.czexp
 Camera: Camera 1 (Back)
 Folder: 10XwellScan\TapeOnly                   # images of colonies will be stored within this folder
                                                # create file name: list with string parts that will be concatinated
                                                # entries that start with '#' will be replaced with meta data values with the same key
 FileName: ['#aics_barcode', '_', '#aics_objectiveMagnification', 'X_', '#aics_dateStartShort', '_','#aics_well','.czi']
 UseAutoFocus: False                            # use autofocus instead of values based on calibration
 UseReference: False                            # Should reference postition been used?
 ManualRefocus: False                           # give user option to manually refocus
 ManualRefocusAfterRepetitions: 1               # manually refocus after n repetitions (0: no refocus)
 SnapImage: True                                # take image and save it, not required for pre-scans
 Wait:                                                        # Wait for user input after imaging and before removing image from display
  Image: True                                                  # Wait after each image
  Plate: False                                                 # Reset wait status after each plate
  Repetition: False                                            # Reset wait status after each repetition
 Load: False                                    # Load between objects
 LoadBetweenWells: False                        # Bring focus drive into load position when moving from one well to another
 AddImmersionWater: False                       # Add immersion water to objective after a predefined number of images
 NameImmersionSystem: BraintreeScientific       # Name for immersion delivery system
 UsePump: False                                 # Use pump to add immersion water
 WellsBeforeAddImmersionWater: 10               # Number of wells to be imaged before water is added to objective. Water will be added before first well.
 ChannelDefinitions:
    - {Name: Transmitted, BackgroundCorrection: BackgroundTransmitted10x, BlackReference: BlackReferenceTransmitted10x}
    - {Name: eGFP, BackgroundCorrection: BackgroundGreen_10x}
 Tile: Automatic                                # Define how to tile
                                                 # - NoTiling:  no tiling
                                                 # - Automatic: Zen Software's tiling
                                                 # - Fixed: use predifined number of tiles
                                                 # - ColonySize:  based on size of colony
                                                 # - Well:  image whole well (if only part of well set PercentageWell to value smaller 100)
 CorrectBackground: False                       # Apply illumination correction before tiling?
 xPitchTile: 1000                               # x size of tile in um
 yPitchTile: 676                                # y size of tile in um
 RotationTile: 0                                # Rotation of field of tiles in degree
 PercentageWell: 20                             # Percentage of well to be imaged when using 'Well' tiling method
 nColTile: 2
 nRowTile: 2
 TileFolder: wellScan
 TileFileName: ['#aics_barcode', '_', '#aics_objectiveMagnification', 'X_','#aics_dateStartShort', '_', '#aics_well','.tif']
 CorrectBackground: False                       # Apply illumination correction before tiling?
 FindType: 'copy_image_position'                # Method used to determine imaging location
                                                  # - Interactive: Use the UI to image objects (on well object for now)
                                                  # - Copy
                                                  # - None
                                                  # - CenterMassCellProfiler: use center of mass as defined in cell profiler (on colony objects for now)
                                                  # - TwofoldDistanceMap: use the twofold distance map to locate smooth areas (on colony objects for now)
                                                  # - InteractiveDistanceMap: use distance map and ask user for confirmation
                                                  # -c opy_image_position: use center of image as object zero position
 Filters:                                       # filters for segmentation if find type = interactive distance map
  minArea: [0]                                   # min area of the colony
  distFromCenter: [150000, 10]                    # max distance from center & the number of colonies you want
 AdjustSigmoidCutoff: 0.3
 AdjustSigmoidGain: 5
 AdjustGammaGain: 1.5

RunMacro:
  FunctionName: run_macro                       # Name of function in Python code in module microscopeAutomation that will process this experiment
  MacroName: 10x_stitch                         # Name of macro called in Zen Blue software
  MacroParams: None                             # Parameter the macro is called with (none: no parameters)
  Folder: ['10XwellScan\TapeOnly\split', '100X_zstack_2hr\TapeOnly', '100X_zstack_4hr\TapeOnly', '100X_zstack_24hr\TapeOnly'] # List of folders inside daily foder to create before running macro if they do not exist.
  Experiment: NoExperiment
  Wait:                                            # Wait for user input after imaging and before removing image from display (has no effect in this experiment module)
   Image: False                                      # Wait after each image
   Plate: False                                      # Reset wait status after each plate
   Repetition: False                                 # Reset wait status after each repetition
  UseAutoFocus: False                            # use autofocus instead of values based on calibration
  Blocking: False                                # open modal dialog in case of error (has no effect in this experiment module)

SegmentWells:
 FunctionName: segment_wells                    # Name of function in Python code in module microscopeAutomation that will process this experiment
 Experiment: NoExperiment
 Name: SegmentWells                             # name of experiment
 UseAutoFocus: False
 Verbose: False                                 # print debug messages?
 Blocking: False                                # open modal dialog in case of error
 Wells: *Wells
 SourceFolder: 10XwellScan
 PositionCsv: positions.csv                     # name of the csv filename where all the positions are stored after segmentation
 PositionDefaultZ: 8800                         # Z stored in CSV file
 Folder: wellScanSegmented                      # images of colonies will be stored within this folder
                                                # create file name: list with string parts that will be concatinated
                                                # entries that start with '#' will be replaced with meta data values with the same key
 FileName: ['#aics_barcode', '_', '#aics_objectiveMagnification', 'X_', '#aics_dateStartShort', '_','#aics_well','.tiff']
 Filters:     # filters for segmentation if find type = interactive distance map
  minArea: [200000]  # min area of the colony
  distFromCenter: [2500, 10]  # max distance from center & the number of colonies you want
 CannySigma: 0.01
 CannyLowThreshold: 0.025
 RemoveSmallHolesAreaThreshold: 1000
 Wait:
  Image: True
  Plate: False
  Repetition: False
